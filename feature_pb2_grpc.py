# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc
import warnings

import feature_pb2 as feature__pb2

GRPC_GENERATED_VERSION = '1.64.0'
GRPC_VERSION = grpc.__version__
EXPECTED_ERROR_RELEASE = '1.65.0'
SCHEDULED_RELEASE_DATE = 'June 25, 2024'
_version_not_supported = False

try:
    from grpc._utilities import first_version_is_lower
    _version_not_supported = first_version_is_lower(GRPC_VERSION, GRPC_GENERATED_VERSION)
except ImportError:
    _version_not_supported = True

if _version_not_supported:
    warnings.warn(
        f'The grpc package installed is at version {GRPC_VERSION},'
        + f' but the generated code in feature_pb2_grpc.py depends on'
        + f' grpcio>={GRPC_GENERATED_VERSION}.'
        + f' Please upgrade your grpc module to grpcio>={GRPC_GENERATED_VERSION}'
        + f' or downgrade your generated code using grpcio-tools<={GRPC_VERSION}.'
        + f' This warning will become an error in {EXPECTED_ERROR_RELEASE},'
        + f' scheduled for release on {SCHEDULED_RELEASE_DATE}.',
        RuntimeWarning
    )


class FeatureStub(object):
    """Missing associated documentation comment in .proto file."""

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.AddPriority = channel.unary_unary(
                '/FeatureService.Feature/AddPriority',
                request_serializer=feature__pb2.PriorityStruct.SerializeToString,
                response_deserializer=feature__pb2.PriorityStruct.FromString,
                _registered_method=True)
        self.AddFeature = channel.unary_unary(
                '/FeatureService.Feature/AddFeature',
                request_serializer=feature__pb2.FeatureStruct.SerializeToString,
                response_deserializer=feature__pb2.FeatureStruct.FromString,
                _registered_method=True)
        self.DelPriority = channel.unary_unary(
                '/FeatureService.Feature/DelPriority',
                request_serializer=feature__pb2.IdStruct.SerializeToString,
                response_deserializer=feature__pb2.Empty.FromString,
                _registered_method=True)
        self.DelFeature = channel.unary_unary(
                '/FeatureService.Feature/DelFeature',
                request_serializer=feature__pb2.IdStruct.SerializeToString,
                response_deserializer=feature__pb2.Empty.FromString,
                _registered_method=True)
        self.EditPriority = channel.unary_unary(
                '/FeatureService.Feature/EditPriority',
                request_serializer=feature__pb2.IdStruct.SerializeToString,
                response_deserializer=feature__pb2.Empty.FromString,
                _registered_method=True)
        self.EditFeature = channel.unary_unary(
                '/FeatureService.Feature/EditFeature',
                request_serializer=feature__pb2.IdStruct.SerializeToString,
                response_deserializer=feature__pb2.Empty.FromString,
                _registered_method=True)
        self.Get = channel.unary_unary(
                '/FeatureService.Feature/Get',
                request_serializer=feature__pb2.Empty.SerializeToString,
                response_deserializer=feature__pb2.HibrydFeatureList.FromString,
                _registered_method=True)
        self.GetFeaturesById = channel.unary_unary(
                '/FeatureService.Feature/GetFeaturesById',
                request_serializer=feature__pb2.IdStruct.SerializeToString,
                response_deserializer=feature__pb2.HibrydFeature.FromString,
                _registered_method=True)


class FeatureServicer(object):
    """Missing associated documentation comment in .proto file."""

    def AddPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def AddFeature(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def DelFeature(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditPriority(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def EditFeature(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def Get(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetFeaturesById(self, request, context):
        """Missing associated documentation comment in .proto file."""
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_FeatureServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'AddPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.AddPriority,
                    request_deserializer=feature__pb2.PriorityStruct.FromString,
                    response_serializer=feature__pb2.PriorityStruct.SerializeToString,
            ),
            'AddFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.AddFeature,
                    request_deserializer=feature__pb2.FeatureStruct.FromString,
                    response_serializer=feature__pb2.FeatureStruct.SerializeToString,
            ),
            'DelPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.DelPriority,
                    request_deserializer=feature__pb2.IdStruct.FromString,
                    response_serializer=feature__pb2.Empty.SerializeToString,
            ),
            'DelFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.DelFeature,
                    request_deserializer=feature__pb2.IdStruct.FromString,
                    response_serializer=feature__pb2.Empty.SerializeToString,
            ),
            'EditPriority': grpc.unary_unary_rpc_method_handler(
                    servicer.EditPriority,
                    request_deserializer=feature__pb2.IdStruct.FromString,
                    response_serializer=feature__pb2.Empty.SerializeToString,
            ),
            'EditFeature': grpc.unary_unary_rpc_method_handler(
                    servicer.EditFeature,
                    request_deserializer=feature__pb2.IdStruct.FromString,
                    response_serializer=feature__pb2.Empty.SerializeToString,
            ),
            'Get': grpc.unary_unary_rpc_method_handler(
                    servicer.Get,
                    request_deserializer=feature__pb2.Empty.FromString,
                    response_serializer=feature__pb2.HibrydFeatureList.SerializeToString,
            ),
            'GetFeaturesById': grpc.unary_unary_rpc_method_handler(
                    servicer.GetFeaturesById,
                    request_deserializer=feature__pb2.IdStruct.FromString,
                    response_serializer=feature__pb2.HibrydFeature.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'FeatureService.Feature', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('FeatureService.Feature', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class Feature(object):
    """Missing associated documentation comment in .proto file."""

    @staticmethod
    def AddPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/AddPriority',
            feature__pb2.PriorityStruct.SerializeToString,
            feature__pb2.PriorityStruct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def AddFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/AddFeature',
            feature__pb2.FeatureStruct.SerializeToString,
            feature__pb2.FeatureStruct.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DelPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/DelPriority',
            feature__pb2.IdStruct.SerializeToString,
            feature__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def DelFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/DelFeature',
            feature__pb2.IdStruct.SerializeToString,
            feature__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EditPriority(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/EditPriority',
            feature__pb2.IdStruct.SerializeToString,
            feature__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def EditFeature(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/EditFeature',
            feature__pb2.IdStruct.SerializeToString,
            feature__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def Get(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/Get',
            feature__pb2.Empty.SerializeToString,
            feature__pb2.HibrydFeatureList.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetFeaturesById(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/FeatureService.Feature/GetFeaturesById',
            feature__pb2.IdStruct.SerializeToString,
            feature__pb2.HibrydFeature.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
